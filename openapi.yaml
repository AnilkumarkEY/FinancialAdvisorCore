openapi: 3.0.0
info:
  title: Financial Advisor Backend API
  description: Backend service for the financial advisor frontend.
  version: "1.0"
servers:
  - url: http://localhost:8080
    description: Development server
paths:
/users/login:
    post:
      summary: User Login
      description: Authenticates a user and returns a token if successful.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  description: The username of the user.
                  example: "test@example.com"
                password:
                  type: string
                  description: The password for the user account.
                  example: "your_password"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: HTTP status code
                    example: 200
                  message:
                    type: string
                    description: Status message
                    example: "Login successful"
                  data:
                    type: object
                    properties:
                      token_type:
                        type: string
                        description: Type of the token
                        example: "Bearer"
                      scope:
                        type: string
                        description: Permissions granted
                        example: "5d7a7727-2a96-45ba-a82f-275e573cda4e/User.Read 5d7a7727-2a96-45ba-a82f-275e573cda4e/.default"
                      expires_in:
                        type: integer
                        description: Token expiration time in seconds
                        example: 5397
                      ext_expires_in:
                        type: integer
                        description: Extended expiration time in seconds
                        example: 5397
                      access_token:
                        type: string
                        description: The JWT access token
                        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
                      refresh_token:
                        type: string
                        description: The refresh token
                        example: "0.Ab4ANhzjhUbV_U6CEB2Go6EXQCd3el2WKrpFqC8nXlc82k6..."
                      id_token:
                        type: string
                        description: The ID token
                        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid username or password."
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Username and password are required."
  
/lead/create-lead:
    post:
      summary: Create a new lead
      description: Creates a new lead with the provided details.
      operationId: createLead
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullName
                - gender
                - mobileNumber
                - leadType
                - city
                - state
                - isNRI
                - isHNI
              properties:
                fullName:
                  type: string
                  description: Full name of the lead.
                gender:
                  type: string
                  description: Gender of the lead.
                mobileNumber:
                  type: string
                  description: Mobile number of the lead.
                leadType:
                  type: string
                  description: Type of the lead.
                email:
                  type: string
                  description: Email address of the lead.
                productInterestedIn:
                  type: array
                  items:
                    type: string
                  description: List of product IDs the lead is interested in.
                addressLine1:
                  type: string
                  description: Address line 1 of the lead.
                addressLine2:
                  type: string
                  description: Address line 2 of the lead.
                zipCode:
                  type: string
                  description: Zip code of the lead's address.
                city:
                  type: string
                  description: City of the lead's address.
                state:
                  type: string
                  description: State of the lead's address.
                isNRI:
                  type: string
                  description: Whether the lead is an NRI.
                isHNI:
                  type: string
                  description: Whether the lead is an HNI.
      responses:
        '200':
          description: Lead created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Lead created successfully."
                  leadId:
                    type: string
                    example: "12345"

/lead/product-interested:
    get:
      summary: Get products interested by lead
      description: Retrieves the list of products a lead is interested in.
      operationId: getProductInterested
      parameters:
        - name: leadId
          in: query
          required: true
          description: The ID of the lead for which products are to be fetched.
          schema:
            type: string
            example: "c9357f00e6524ef7ba0b045dbfcfeba5"
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
      responses:
        '200':
          description: List of products interested by the lead
          content:
            application/json:
              schema:
                type: object
                
/lead/get-lead-list:
    get:
      summary: Get lead list
      description: Retrieves the list of leads.
      operationId: getLeadList
      parameters:
        - name: leadId
          in: query
          required: true
          description: The ID of the lead for which activities are to be fetched.
          schema:
            type: string
            example: "c9357f00e6524ef7ba0b045dbfcfeba5"
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
      responses:
        '200':
          description: Lead list retrieved successfully
          content:
            application/json:
              schema:
                type: object

/lead/get-all-products:
    get:
      summary: Get all products
      description: Retrieves the list of all products.
      operationId: getAllProducts
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
      responses:
        '200':
          description: List of all products
          content:
            application/json:
              schema:
                type: object
